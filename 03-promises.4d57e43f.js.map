{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAMA,SAASC,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,SAAUA,EAAUC,MAAOA,IAGrCG,EAAO,CAAEJ,SAAUA,EAAUC,MAAOA,G,GAErCA,E,IAfMO,SAASC,cAAc,SAE/BC,iBAAiB,UAAU,SAAAC,G,OAiChC,SAAsBA,GACpBA,EAAEC,iBACF,IAAMC,EAASC,OAAOH,EAAEI,OAAOF,OAAOG,OAChCf,EAAQa,OAAOH,EAAEI,OAAOd,MAAMe,OAC9BC,EAAOH,OAAOH,EAAEI,OAAOE,KAAKD,QAnBpC,SAAyBH,EAAQZ,EAAOgB,GAGtC,IAFA,IAAIC,EAAYjB,EAEPkB,EAAI,EAAGA,GAAKN,EAAQM,GAAK,EAAGD,GAAaD,EAChDG,QAAQC,IAAIH,GACZnB,EAAcoB,EAAGD,GACdI,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUwB,EAAKD,EAALtB,MACjBwB,EAAA5B,GAAS6B,OAAOC,QAAQ,qBAAoCC,OAAf5B,EAAS,QAAY4B,OAANJ,EAAM,M,IAEnEK,OAAM,SAAAN,G,IAAGvB,EAAQuB,EAARvB,SAAUwB,EAAKD,EAALtB,MAClBwB,EAAA5B,GAAS6B,OAAOI,QAAQ,oBAAmCF,OAAf5B,EAAS,QAAY4B,OAANJ,EAAM,M,IAWvEO,CAAgBlB,EAAQZ,EAAOgB,E,CAvCIe,CAAarB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => handelSubmit(e));\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position: position, delay: delay });\n      } else {\n        // Reject\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nfunction generatePromise(amount, delay, step) {\n  let delayStep = delay;\n\n  for (let i = 1; i <= amount; i += 1, delayStep += step) {\n    console.log(delayStep);\n    createPromise(i, delayStep)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\nfunction handelSubmit(e) {\n  e.preventDefault();\n  const amount = Number(e.target.amount.value);\n  const delay = Number(e.target.delay.value);\n  const step = Number(e.target.step.value);\n\n  generatePromise(amount, delay, step);\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","amount","Number","target","value","step","delayStep","i","console","log","then","param","_$delay","$parcel$interopDefault","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$generatePromise","$ce04d3a99e08e73b$var$handelSubmit"],"version":3,"file":"03-promises.4d57e43f.js.map"}